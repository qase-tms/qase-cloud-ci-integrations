name: 'Qase Test Run Action'
description: 'Starts a test run in Qase, waits for it to finish, and checks for passed status.'
author: 'Qase Team'

inputs:
  project_code:
    description: 'Qase project code'
    required: true
  api_token:
    description: 'Qase API token'
    required: true
  run_title:
    description: 'Title of the test run'
    required: true
  case_ids:
    description: 'Comma-separated list of case IDs'
    required: false
  include_all_cases:
    description: 'Include all cases in the project'
    required: false
    default: 'false'
  environment_id:
    description: 'Environment ID to assign to the run'
    required: false
  browser:
    description: "Browser on which to run autotests"
    required: false
    default: "chromium"
  timeout:
    description: 'Maximum time to wait for run completion (in seconds)'
    required: false
    default: '600'
  poll_interval:
    description: 'Time between status checks (in seconds)'
    required: false
    default: '10'

runs:
  using: 'composite'
  steps:
    - name: Run Qase Test Run
      shell: bash
      run: |
        CMD="${{ github.action_path }}/../src/action.sh"
        CMD+=" --project-code ${{ inputs.project_code }}"
        CMD+=" --api-token '${{ inputs.api_token }}'"
        CMD+=" --run-title '${{ inputs.run_title }}'"

        if [ -n "${{ inputs.case_ids }}" ]; then
          CMD+=" --case-ids ${{ inputs.case_ids }}"
        fi

        if [ "${{ inputs.include_all_cases }}" = "true" ]; then
          CMD+=" --include-all-cases"
        fi

        if [ -n "${{ inputs.environment_id }}" ]; then
          CMD+=" --environment-id ${{ inputs.environment_id }}"
        fi

        if [ -n "${{ inputs.run_type }}" ]; then
          CMD+=" --run-type ${{ inputs.run_type }}"
        fi

        if [ -n "${{ inputs.configuration }}" ]; then
          CMD+=" --configuration '${{ inputs.configuration }}'"
        fi

        if [ -n "${{ inputs.timeout }}" ]; then
          CMD+=" --timeout ${{ inputs.timeout }}"
        fi

        if [ -n "${{ inputs.poll_interval }}" ]; then
          CMD+=" --poll-interval ${{ inputs.poll_interval }}"
        fi

        echo "Executing: $CMD"
        eval "$CMD"

branding:
  icon: 'check-circle'
  color: 'green'